import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, Message

# –í–°–¢–ê–í–¨ –°–í–û–ô –¢–û–ö–ï–ù –°–Æ–î–ê
TOKEN = "7842175490:AAHkOVyDcWfDLK_kjpIxVCAsdMgllOc6aYA"

logging.basicConfig(level=logging.INFO)

bot = Bot(token=TOKEN)
dp = Dispatcher()

# --- –ö–ù–û–ü–ö–ò ---
menu_buttons = [
    [KeyboardButton(text="üì¢ –°–ø–∏–∫–µ—Ä—ã"), KeyboardButton(text="üìÖ –ü—Ä–æ–≥—Ä–∞–º–º–∞")],
    [KeyboardButton(text="üì© –ö–æ–Ω—Ç–∞–∫—Ç —Å –∞–¥–º–∏–Ω–æ–º"), KeyboardButton(text="üìö –û–±—É—á–µ–Ω–∏–µ")],
    [KeyboardButton(text="ü§ù –ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ"), KeyboardButton(text="üè¢ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏")]
]
main_menu = ReplyKeyboardMarkup(keyboard=menu_buttons, resize_keyboard=True)

# --- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ---
@dp.message(Command("start"))
async def start_handler(message: Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –±–æ—Ç. –î–∞–≤–∞–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º—Å—è!", 
                         reply_markup=ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)]], 
        resize_keyboard=True))

@dp.message(lambda message: message.contact)
async def register_user(message: Message):
    phone = message.contact.phone_number
    await message.answer(f"‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à –Ω–æ–º–µ—Ä {phone} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.", reply_markup=main_menu)
    logging.info(f"User {message.from_user.id} registered with phone {phone}")

@dp.message(lambda message: message.text == "üì¢ –°–ø–∏–∫–µ—Ä—ã")
async def speakers_info(message: Message):
    await message.answer("üé§ –ù–∞—à–∏ —ç–∫—Å–ø–µ—Ä—Ç—ã: –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤, –ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞, –ú–∞–π–∫–ª –î–∂–æ–Ω—Å.")

@dp.message(lambda message: message.text == "üìÖ –ü—Ä–æ–≥—Ä–∞–º–º–∞")
async def program_info(message: Message):
    await message.answer("üìÜ –ü—Ä–æ–≥—Ä–∞–º–º–∞:\n- –î–µ–Ω—å 1: –í–≤–µ–¥–µ–Ω–∏–µ –≤ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\n- –î–µ–Ω—å 2: –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.")

@dp.message(lambda message: message.text == "üì© –ö–æ–Ω—Ç–∞–∫—Ç —Å –∞–¥–º–∏–Ω–æ–º")
async def contact_admin(message: Message):
    await message.answer("üì¨ –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º: @InvestAdmin")

@dp.message(lambda message: message.text == "üìö –û–±—É—á–µ–Ω–∏–µ")
async def training_request(message: Message):
    await message.answer("üìå –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.")
    logging.info(f"User {message.from_user.id} –ø–æ–¥–∞–ª –∑–∞—è–≤–∫—É –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ")

@dp.message(lambda message: message.text == "ü§ù –ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ")
async def partnership_request(message: Message):
    await message.answer("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ –ø—Ä–∏–Ω—è—Ç–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.")
    logging.info(f"User {message.from_user.id} –ø–æ–¥–∞–ª –∑–∞—è–≤–∫—É –Ω–∞ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ")

@dp.message(lambda message: message.text == "üè¢ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏")
async def investment_quiz(message: Message):
    await message.answer("üí∞ –ü—Ä–æ–π–¥–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–µ—Å—Ç: \n1. –í –∫–∞–∫–æ–º —Ä–µ–≥–∏–æ–Ω–µ —Ö–æ—Ç–∏—Ç–µ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å?\n2. –ö–∞–∫–æ–π —É –≤–∞—Å –±—é–¥–∂–µ—Ç?")
    logging.info(f"User {message.from_user.id} –Ω–∞—á–∞–ª –∫–≤–∏–∑ –ø–æ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º")

@dp.message(Command("help"))
async def help_command(message: Message):
    await message.answer("‚ÑπÔ∏è –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –≤–∞–º —É–∑–Ω–∞–≤–∞—Ç—å –æ —Å–ø–∏–∫–µ—Ä–∞—Ö, –ø—Ä–æ–≥—Ä–∞–º–º–µ –∏ –æ—Å—Ç–∞–≤–ª—è—Ç—å –∑–∞—è–≤–∫–∏.")

@dp.message(Command("cancel"))
async def cancel_command(message: Message):
    await message.answer("‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=ReplyKeyboardRemove())

# --- –ó–ê–ü–£–°–ö –ë–û–¢–ê ---
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())